from collections import deque
import sys
input = sys.stdin.readline

n = int(input())

self_cost = [0] * (n+1)
cost = [0] * (n+1)
pre = [0] * (n+1)
next = [list() for _ in range(n+1)]

q = deque()

for i in range(1, n+1):
    lst = list(map(int, input().strip().split()))
    self_cost[i] = lst[0]

    for pre_building in lst[1:-1]:
        next[pre_building].append(i)

    pre[i] = len(lst) - 2
    if pre[i] == 0:
        q.append(i)

while q:
    idx = q.popleft()
    cost[idx] += self_cost[idx]

    for next_idx in next[idx]:
        cost[next_idx] = max(cost[next_idx], cost[idx])
        pre[next_idx] -= 1

        if pre[next_idx] == 0:
            q.append(next_idx)

for ans in cost[1:]:
    print(ans)
