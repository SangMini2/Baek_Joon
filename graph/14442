from collections import deque
import sys
input = sys.stdin.readline

n, m, k = map(int, input().strip().split())
arr = [list(map(int, list(input().strip()))) for _ in range(n)]
visited = [[[float('inf')] * (k+1) for _ in range(m)]
           for _ in range(n)]  # [n, m, k]

q = deque()
q.append((0, 0, 0))
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

if arr[0][0] == 1:
    q.append((0, 0, 1))
    visited[0][0][1] = 1

else:
    q.append((0, 0, 0))
    visited[0][0][0] = 1


while q:
    x, y, cnt = q.popleft()
    if x == n-1 and y == m-1:
        print(min(visited[x][y][:]))
        exit()

    for i in range(4):
        nx, ny = x + dx[i], y + dy[i]
        if 0 <= nx < n and 0 <= ny < m:
            if arr[nx][ny] == 1 and cnt < k and visited[nx][ny][cnt+1] > visited[x][y][cnt] + 1:
                # 아직 방문 안한 곳이면 바로 추가
                # if min(visited[nx][ny][:cnt+1]) > visited[x][y][cnt] + 1:
                q.append((nx, ny, cnt + 1))
                visited[nx][ny][cnt+1] = visited[x][y][cnt] + 1

            elif arr[nx][ny] == 0 and visited[nx][ny][cnt] > visited[x][y][cnt] + 1:  # arr[nx][ny] = 0
                q.append((nx, ny, cnt))
                visited[nx][ny][cnt] = visited[x][y][cnt] + 1

print(-1)
