from collections import deque
import sys
input = sys.stdin.readline

arr = [-1]
for _ in range(4):
    arr.append(deque(list(map(int, list(input().strip())))))

'''
비교하는 것이 있다.
1. queue로 넣었다 뺐다 하지 말고, 차라리 그냥 idx를 주는 방법: 12시 방향에 대해 index를 부여하는 방법.
오른쪽과 비교: (idx + 2) % 8 , 왼쪽과 비교: (idx + 6) % 8
시계 방향: +7, 반시계: +1

2. queue로 넣었다 뺐다 하기
오른쪽과 비교: 2, 왼쪽과 비교: 6
'''

oclock_idx = [0] * 5


def moving(moving_idx, moving_dir):
    dic = dict()
    for i in range(1, 4):
        dic[(i, i+1)] = 0
    if arr[1][(oclock_idx[1] + 2) % 8] != arr[2][(oclock_idx[2] + 6) % 8]:
        dic[(1, 2)] = 1

    if arr[2][(oclock_idx[2] + 2) % 8] != arr[3][(oclock_idx[3] + 6) % 8]:
        dic[(2, 3)] = 1

    if arr[3][(oclock_idx[3] + 2) % 8] != arr[4][(oclock_idx[4] + 6) % 8]:
        dic[(3, 4)] = 1

    visited = [0] * 5

    def reverse_dir(input_dir):
        if input_dir == 1:
            return -1
        return 1

    q = deque()
    q.append((moving_idx, moving_dir))
    visited[moving_idx] = 1
    while q:
        check_idx, check_dir = q.popleft()
        if check_dir == 1:
            oclock_idx[check_idx] = (oclock_idx[check_idx] + 7) % 8
        else:
            oclock_idx[check_idx] = (oclock_idx[check_idx] + 1) % 8

        if (check_idx - 1, check_idx) in dic and dic[(check_idx-1, check_idx)] and visited[check_idx - 1] == 0:
            q.append((check_idx - 1, reverse_dir(check_dir)))
            visited[check_idx - 1] = 1

        if (check_idx, check_idx + 1) in dic and dic[(check_idx, check_idx + 1)] and visited[check_idx + 1] == 0:
            q.append((check_idx + 1, reverse_dir(check_dir)))
            visited[check_idx + 1] = 1


k = int(input())
for _ in range(k):
    idx, dir = map(int, input().strip().split())
    moving(idx, dir)

ans = 0
for i in range(1, 5):
    # print(f"더해지는 것: {2**(i-1) * arr[i][oclock_idx[i]]}, i: {i}")
    ans += 2**(i-1) * arr[i][oclock_idx[i]]

print(ans)
